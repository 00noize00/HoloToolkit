/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace XTools {

public class ProfilerStreamListener : Listener {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal ProfilerStreamListener(global::System.IntPtr cPtr, bool cMemoryOwn) : base(XToolsProfilerPINVOKE.ProfilerStreamListener_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ProfilerStreamListener obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ProfilerStreamListener() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          XToolsProfilerPINVOKE.delete_ProfilerStreamListener(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public virtual void OnConnected() {
    if (SwigDerivedClassHasMethod("OnConnected", swigMethodTypes0)) XToolsProfilerPINVOKE.ProfilerStreamListener_OnConnectedSwigExplicitProfilerStreamListener(swigCPtr); else XToolsProfilerPINVOKE.ProfilerStreamListener_OnConnected(swigCPtr);
  }

  public virtual void OnConnectFailed() {
    if (SwigDerivedClassHasMethod("OnConnectFailed", swigMethodTypes1)) XToolsProfilerPINVOKE.ProfilerStreamListener_OnConnectFailedSwigExplicitProfilerStreamListener(swigCPtr); else XToolsProfilerPINVOKE.ProfilerStreamListener_OnConnectFailed(swigCPtr);
  }

  public virtual void OnDisconnected() {
    if (SwigDerivedClassHasMethod("OnDisconnected", swigMethodTypes2)) XToolsProfilerPINVOKE.ProfilerStreamListener_OnDisconnectedSwigExplicitProfilerStreamListener(swigCPtr); else XToolsProfilerPINVOKE.ProfilerStreamListener_OnDisconnected(swigCPtr);
  }

  public virtual void OnReceiveProfileFrame(ProfileFrame newFrame) {
    if (SwigDerivedClassHasMethod("OnReceiveProfileFrame", swigMethodTypes3)) XToolsProfilerPINVOKE.ProfilerStreamListener_OnReceiveProfileFrameSwigExplicitProfilerStreamListener(swigCPtr, ProfileFrame.getCPtr(newFrame)); else XToolsProfilerPINVOKE.ProfilerStreamListener_OnReceiveProfileFrame(swigCPtr, ProfileFrame.getCPtr(newFrame));
  }

  public ProfilerStreamListener() : this(XToolsProfilerPINVOKE.new_ProfilerStreamListener(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("OnConnected", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateProfilerStreamListener_0(SwigDirectorOnConnected);
    if (SwigDerivedClassHasMethod("OnConnectFailed", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateProfilerStreamListener_1(SwigDirectorOnConnectFailed);
    if (SwigDerivedClassHasMethod("OnDisconnected", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateProfilerStreamListener_2(SwigDirectorOnDisconnected);
    if (SwigDerivedClassHasMethod("OnReceiveProfileFrame", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateProfilerStreamListener_3(SwigDirectorOnReceiveProfileFrame);
    XToolsProfilerPINVOKE.ProfilerStreamListener_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(ProfilerStreamListener));
    return hasDerivedMethod;
  }

  private void SwigDirectorOnConnected() {
    OnConnected();
  }

  private void SwigDirectorOnConnectFailed() {
    OnConnectFailed();
  }

  private void SwigDirectorOnDisconnected() {
    OnDisconnected();
  }

  private void SwigDirectorOnReceiveProfileFrame(global::System.IntPtr newFrame) {
    OnReceiveProfileFrame((newFrame == global::System.IntPtr.Zero) ? null : new ProfileFrame(newFrame, true));
  }

  public delegate void SwigDelegateProfilerStreamListener_0();
  public delegate void SwigDelegateProfilerStreamListener_1();
  public delegate void SwigDelegateProfilerStreamListener_2();
  public delegate void SwigDelegateProfilerStreamListener_3(global::System.IntPtr newFrame);

  private SwigDelegateProfilerStreamListener_0 swigDelegate0;
  private SwigDelegateProfilerStreamListener_1 swigDelegate1;
  private SwigDelegateProfilerStreamListener_2 swigDelegate2;
  private SwigDelegateProfilerStreamListener_3 swigDelegate3;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(ProfileFrame) };
}

}
