/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace XTools {

public class TagImage : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal TagImage(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(TagImage obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~TagImage() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          XToolsClientPINVOKE.delete_TagImage(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual int GetWidth() {
    int ret = XToolsClientPINVOKE.TagImage_GetWidth(swigCPtr);
    return ret;
  }

  public virtual int GetHeight() {
    int ret = XToolsClientPINVOKE.TagImage_GetHeight(swigCPtr);
    return ret;
  }

  public unsafe void CopyImageData(byte[] data, int bufferSize, int bytesPerPixel) {
    fixed ( byte* swig_ptrTo_data = data ) {
    {
      XToolsClientPINVOKE.TagImage_CopyImageData(swigCPtr, (global::System.IntPtr)swig_ptrTo_data, bufferSize, bytesPerPixel);
    }
    }
  }

}

}
