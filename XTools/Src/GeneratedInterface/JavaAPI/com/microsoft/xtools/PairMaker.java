/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.microsoft.xtools;

public class PairMaker {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected PairMaker(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PairMaker obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        XToolsClientJNI.delete_PairMaker(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    XToolsClientJNI.PairMaker_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    XToolsClientJNI.PairMaker_change_ownership(this, swigCPtr, true);
  }

  public boolean IsReceiver() {
    return (getClass() == PairMaker.class) ? XToolsClientJNI.PairMaker_IsReceiver(swigCPtr, this) : XToolsClientJNI.PairMaker_IsReceiverSwigExplicitPairMaker(swigCPtr, this);
  }

  public int GetAddressCount() {
    return XToolsClientJNI.PairMaker_GetAddressCount(swigCPtr, this);
  }

  public XString GetAddress(int index) {
	// ref_ptr by value javaout
    long cPtr = (getClass() == PairMaker.class) ? XToolsClientJNI.PairMaker_GetAddress(swigCPtr, this, index) : XToolsClientJNI.PairMaker_GetAddressSwigExplicitPairMaker(swigCPtr, this, index);
    return (cPtr == 0) ? null : new XString(cPtr, true);
  }

  public int GetPort() {
    return (getClass() == PairMaker.class) ? XToolsClientJNI.PairMaker_GetPort(swigCPtr, this) : XToolsClientJNI.PairMaker_GetPortSwigExplicitPairMaker(swigCPtr, this);
  }

  public void Update() {
    if (getClass() == PairMaker.class) XToolsClientJNI.PairMaker_Update(swigCPtr, this); else XToolsClientJNI.PairMaker_UpdateSwigExplicitPairMaker(swigCPtr, this);
  }

  public boolean IsReadyToConnect() {
    return (getClass() == PairMaker.class) ? XToolsClientJNI.PairMaker_IsReadyToConnect(swigCPtr, this) : XToolsClientJNI.PairMaker_IsReadyToConnectSwigExplicitPairMaker(swigCPtr, this);
  }

  public int GetLocalKey() {
    return (getClass() == PairMaker.class) ? XToolsClientJNI.PairMaker_GetLocalKey(swigCPtr, this) : XToolsClientJNI.PairMaker_GetLocalKeySwigExplicitPairMaker(swigCPtr, this);
  }

  public int GetRemoteKey() {
    return (getClass() == PairMaker.class) ? XToolsClientJNI.PairMaker_GetRemoteKey(swigCPtr, this) : XToolsClientJNI.PairMaker_GetRemoteKeySwigExplicitPairMaker(swigCPtr, this);
  }

  public PairMaker() {
    this(XToolsClientJNI.new_PairMaker(), true);
    XToolsClientJNI.PairMaker_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

}
