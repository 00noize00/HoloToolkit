/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.microsoft.xtools;

public class NetworkConnection {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected NetworkConnection(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(NetworkConnection obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        XToolsClientJNI.delete_NetworkConnection(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean IsConnected() {
    return XToolsClientJNI.NetworkConnection_IsConnected(swigCPtr, this);
  }

  public java.math.BigInteger GetConnectionGUID() {
    return XToolsClientJNI.NetworkConnection_GetConnectionGUID(swigCPtr, this);
  }

  public void Send(NetworkOutMessage msg, MessagePriority priority, MessageReliability reliability, MessageChannel channel, boolean releaseMessage) {
    XToolsClientJNI.NetworkConnection_Send__SWIG_0(swigCPtr, this, NetworkOutMessage.getCPtr(msg), msg, priority.swigValue(), reliability.swigValue(), channel.swigValue(), releaseMessage);
  }

  public void Send(NetworkOutMessage msg, MessagePriority priority, MessageReliability reliability, MessageChannel channel) {
    XToolsClientJNI.NetworkConnection_Send__SWIG_1(swigCPtr, this, NetworkOutMessage.getCPtr(msg), msg, priority.swigValue(), reliability.swigValue(), channel.swigValue());
  }

  public void Send(NetworkOutMessage msg, MessagePriority priority, MessageReliability reliability) {
    XToolsClientJNI.NetworkConnection_Send__SWIG_2(swigCPtr, this, NetworkOutMessage.getCPtr(msg), msg, priority.swigValue(), reliability.swigValue());
  }

  public void Send(NetworkOutMessage msg, MessagePriority priority) {
    XToolsClientJNI.NetworkConnection_Send__SWIG_3(swigCPtr, this, NetworkOutMessage.getCPtr(msg), msg, priority.swigValue());
  }

  public void Send(NetworkOutMessage msg) {
    XToolsClientJNI.NetworkConnection_Send__SWIG_4(swigCPtr, this, NetworkOutMessage.getCPtr(msg), msg);
  }

  public void Broadcast(NetworkOutMessage msg, MessagePriority priority, MessageReliability reliability, MessageChannel channel, boolean releaseMessage) {
    XToolsClientJNI.NetworkConnection_Broadcast__SWIG_0(swigCPtr, this, NetworkOutMessage.getCPtr(msg), msg, priority.swigValue(), reliability.swigValue(), channel.swigValue(), releaseMessage);
  }

  public void Broadcast(NetworkOutMessage msg, MessagePriority priority, MessageReliability reliability, MessageChannel channel) {
    XToolsClientJNI.NetworkConnection_Broadcast__SWIG_1(swigCPtr, this, NetworkOutMessage.getCPtr(msg), msg, priority.swigValue(), reliability.swigValue(), channel.swigValue());
  }

  public void Broadcast(NetworkOutMessage msg, MessagePriority priority, MessageReliability reliability) {
    XToolsClientJNI.NetworkConnection_Broadcast__SWIG_2(swigCPtr, this, NetworkOutMessage.getCPtr(msg), msg, priority.swigValue(), reliability.swigValue());
  }

  public void Broadcast(NetworkOutMessage msg, MessagePriority priority) {
    XToolsClientJNI.NetworkConnection_Broadcast__SWIG_3(swigCPtr, this, NetworkOutMessage.getCPtr(msg), msg, priority.swigValue());
  }

  public void Broadcast(NetworkOutMessage msg) {
    XToolsClientJNI.NetworkConnection_Broadcast__SWIG_4(swigCPtr, this, NetworkOutMessage.getCPtr(msg), msg);
  }

  public void AddListener(byte messageType, NetworkConnectionListener newListener) {
    XToolsClientJNI.NetworkConnection_AddListener(swigCPtr, this, messageType, NetworkConnectionListener.getCPtr(newListener), newListener);
  }

  public void RemoveListener(byte messageType, NetworkConnectionListener oldListener) {
    XToolsClientJNI.NetworkConnection_RemoveListener(swigCPtr, this, messageType, NetworkConnectionListener.getCPtr(oldListener), oldListener);
  }

  public boolean RegisterAsyncCallback(byte messageType, NetworkConnectionListener cb) {
    return XToolsClientJNI.NetworkConnection_RegisterAsyncCallback(swigCPtr, this, messageType, NetworkConnectionListener.getCPtr(cb), cb);
  }

  public void UnregisterAsyncCallback(byte messageType) {
    XToolsClientJNI.NetworkConnection_UnregisterAsyncCallback(swigCPtr, this, messageType);
  }

  public NetworkOutMessage CreateMessage(byte messageType) {
	// ref_ptr by value javaout
    long cPtr = XToolsClientJNI.NetworkConnection_CreateMessage(swigCPtr, this, messageType);
    return (cPtr == 0) ? null : new NetworkOutMessage(cPtr, true);
  }

  public void ReturnMessage(NetworkOutMessage msg) {
    XToolsClientJNI.NetworkConnection_ReturnMessage(swigCPtr, this, NetworkOutMessage.getCPtr(msg), msg);
  }

  public void Disconnect() {
    XToolsClientJNI.NetworkConnection_Disconnect(swigCPtr, this);
  }

  public XString GetRemoteAddress() {
	// ref_ptr by value javaout
    long cPtr = XToolsClientJNI.NetworkConnection_GetRemoteAddress(swigCPtr, this);
    return (cPtr == 0) ? null : new XString(cPtr, true);
  }

}
