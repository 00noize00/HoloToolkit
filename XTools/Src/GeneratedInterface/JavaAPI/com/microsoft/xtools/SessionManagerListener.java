/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.microsoft.xtools;

public class SessionManagerListener extends Listener {
  private long swigCPtr;

  protected SessionManagerListener(long cPtr, boolean cMemoryOwn) {
    super(XToolsClientJNI.SessionManagerListener_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SessionManagerListener obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        XToolsClientJNI.delete_SessionManagerListener(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    XToolsClientJNI.SessionManagerListener_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    XToolsClientJNI.SessionManagerListener_change_ownership(this, swigCPtr, true);
  }

  public void OnCreateSucceeded(Session newSession) {
    if (getClass() == SessionManagerListener.class) XToolsClientJNI.SessionManagerListener_OnCreateSucceeded(swigCPtr, this, Session.getCPtr(newSession), newSession); else XToolsClientJNI.SessionManagerListener_OnCreateSucceededSwigExplicitSessionManagerListener(swigCPtr, this, Session.getCPtr(newSession), newSession);
  }

  public void OnCreateFailed(XString reason) {
    if (getClass() == SessionManagerListener.class) XToolsClientJNI.SessionManagerListener_OnCreateFailed(swigCPtr, this, XString.getCPtr(reason), reason); else XToolsClientJNI.SessionManagerListener_OnCreateFailedSwigExplicitSessionManagerListener(swigCPtr, this, XString.getCPtr(reason), reason);
  }

  public void OnSessionAdded(Session newSession) {
    if (getClass() == SessionManagerListener.class) XToolsClientJNI.SessionManagerListener_OnSessionAdded(swigCPtr, this, Session.getCPtr(newSession), newSession); else XToolsClientJNI.SessionManagerListener_OnSessionAddedSwigExplicitSessionManagerListener(swigCPtr, this, Session.getCPtr(newSession), newSession);
  }

  public void OnSessionClosed(Session session) {
    if (getClass() == SessionManagerListener.class) XToolsClientJNI.SessionManagerListener_OnSessionClosed(swigCPtr, this, Session.getCPtr(session), session); else XToolsClientJNI.SessionManagerListener_OnSessionClosedSwigExplicitSessionManagerListener(swigCPtr, this, Session.getCPtr(session), session);
  }

  public void OnUserJoinedSession(Session session, User newUser) {
    if (getClass() == SessionManagerListener.class) XToolsClientJNI.SessionManagerListener_OnUserJoinedSession(swigCPtr, this, Session.getCPtr(session), session, User.getCPtr(newUser), newUser); else XToolsClientJNI.SessionManagerListener_OnUserJoinedSessionSwigExplicitSessionManagerListener(swigCPtr, this, Session.getCPtr(session), session, User.getCPtr(newUser), newUser);
  }

  public void OnUserLeftSession(Session session, User user) {
    if (getClass() == SessionManagerListener.class) XToolsClientJNI.SessionManagerListener_OnUserLeftSession(swigCPtr, this, Session.getCPtr(session), session, User.getCPtr(user), user); else XToolsClientJNI.SessionManagerListener_OnUserLeftSessionSwigExplicitSessionManagerListener(swigCPtr, this, Session.getCPtr(session), session, User.getCPtr(user), user);
  }

  public void OnUserChanged(Session session, User user) {
    if (getClass() == SessionManagerListener.class) XToolsClientJNI.SessionManagerListener_OnUserChanged(swigCPtr, this, Session.getCPtr(session), session, User.getCPtr(user), user); else XToolsClientJNI.SessionManagerListener_OnUserChangedSwigExplicitSessionManagerListener(swigCPtr, this, Session.getCPtr(session), session, User.getCPtr(user), user);
  }

  public void OnServerConnected() {
    if (getClass() == SessionManagerListener.class) XToolsClientJNI.SessionManagerListener_OnServerConnected(swigCPtr, this); else XToolsClientJNI.SessionManagerListener_OnServerConnectedSwigExplicitSessionManagerListener(swigCPtr, this);
  }

  public void OnServerDisconnected() {
    if (getClass() == SessionManagerListener.class) XToolsClientJNI.SessionManagerListener_OnServerDisconnected(swigCPtr, this); else XToolsClientJNI.SessionManagerListener_OnServerDisconnectedSwigExplicitSessionManagerListener(swigCPtr, this);
  }

  public SessionManagerListener() {
    this(XToolsClientJNI.new_SessionManagerListener(), true);
    XToolsClientJNI.SessionManagerListener_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

}
